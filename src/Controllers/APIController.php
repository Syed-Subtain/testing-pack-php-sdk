<?php

declare(strict_types=1);

/*
 * EnumAsTemplateParameterExampleAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace EnumAsTemplateParameterExampleAPILib\Controllers;

use Core\Request\Parameters\TemplateParam;
use Core\Response\Types\ErrorType;
use CoreInterfaces\Core\Request\RequestMethod;
use EnumAsTemplateParameterExampleAPILib\Exceptions\ApiException;
use EnumAsTemplateParameterExampleAPILib\Models\ItemsResponse;
use EnumAsTemplateParameterExampleAPILib\Models\StatusEnum;

class APIController extends BaseController
{
    /**
     * Retrieve a list of items based on their status.
     *
     * @param string $status The status of the items to filter by.
     *
     * @return ItemsResponse[] Response from the API call
     *
     * @throws ApiException Thrown if API call fails
     */
    public function getItemsByStatus(string $status): array
    {
        $_reqBuilder = $this->requestBuilder(RequestMethod::GET, '/items/{status}')
            ->parameters(TemplateParam::init('status', $status)->serializeBy([StatusEnum::class, 'checkValue']));

        $_resHandler = $this->responseHandler()
            ->throwErrorOn('400', ErrorType::init('Bad request, possibly due to an invalid status value.'))
            ->throwErrorOn('404', ErrorType::init('No items found for the given status.'))
            ->type(ItemsResponse::class, 1);

        return $this->execute($_reqBuilder, $_resHandler);
    }
}
